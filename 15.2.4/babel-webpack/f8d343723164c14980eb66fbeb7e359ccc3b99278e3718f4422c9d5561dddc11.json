{"ast":null,"code":"import _asyncToGenerator from \"/home/william/Epitech/EIP/frontEnd/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  ngOnInit() {\n    this.popUp = false;\n    this.name = \"\";\n    this.password = \"\";\n  }\n  closePopUp() {\n    this.popUp = false;\n  }\n  onEnterEmail(value) {\n    console.log(value);\n    this.name = value;\n  }\n  onEnterPass(value) {\n    this.password = value;\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.name == \"\" || _this.password == \"\") {\n        _this.Erreur = 'Veuillez remplir tous les champs';\n        _this.popUp = true;\n        return;\n      }\n      yield fetch(\"http://localhost:3000/user/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: _this.name,\n          // email: \"william@epitech.eu\",\n          password: _this.password\n          // password: \"william\",\n        })\n      }).then(function (response) {\n        // The API call was successful!\n        if (response.ok) {\n          return response.json();\n        } else {\n          return Promise.reject(response);\n        }\n      }).then(data => {\n        // This is the JSON from our response\n        _this.router.navigate(['home']);\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('id', data.user.user_id);\n      });\n    })();\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEAC,UAAU;IACR,IAAI,CAACH,KAAK,GAAG,KAAK;EACpB;EAEAI,YAAY,CAACC,KAAc;IACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAI,CAACJ,IAAI,GAAGI,KAAK;EACnB;EAEAG,WAAW,CAACH,KAAa;IACvB,IAAI,CAACH,QAAQ,GAAGG,KAAK;EACvB;EAEMI,KAAK;IAAA;IAAA;MACT,IAAI,KAAI,CAACR,IAAI,IAAI,EAAE,IAAI,KAAI,CAACC,QAAQ,IAAI,EAAE,EAAE;QAC1C,KAAI,CAACQ,MAAM,GAAG,kCAAkC;QAChD,KAAI,CAACV,KAAK,GAAG,IAAI;QACjB;;MAEF,MAAMW,KAAK,CAAC,kCAAkC,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UACP,cAAc,EAAE;SACjB;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,KAAI,CAACjB,IAAI;UAChB;UACAC,QAAQ,EAAE,KAAI,CAACA;UACf;SACD;OACF,CAAC,CAACiB,IAAI,CAAC,UAAUC,QAAQ;QACxB;QACE,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACb,OAAOD,QAAQ,CAACE,IAAI,EAAE;SACzB,MAAM;UACH,OAAOC,OAAO,CAACC,MAAM,CAACJ,QAAQ,CAAC;;MAEvC,CAAC,CAAC,CAACD,IAAI,CAACM,IAAI,IAAG;QACb;QACA,KAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;QACzCF,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEH,IAAI,CAACK,IAAI,CAACC,OAAO,CAAC;MAC/C,CAAC,CAAC;IAAA;EACJ;CACD;AA3DYnC,iBAAiB,eAL7BD,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWtC,iBAAiB,CA2D7B;SA3DYA,iBAAiB","names":["Component","RegisterComponent","constructor","router","ngOnInit","popUp","name","password","closePopUp","onEnterEmail","value","console","log","onEnterPass","login","Erreur","fetch","method","mode","headers","body","JSON","stringify","email","then","response","ok","json","Promise","reject","data","navigate","localStorage","setItem","token","user","user_id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/william/Epitech/EIP/frontEnd/front/src/app/register/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  name!: string;\n  password!: string;\n  popUp!: boolean;\n  Erreur!: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.popUp = false;\n    this.name = \"\"\n    this.password = \"\"\n  }\n\n  closePopUp() {\n    this.popUp = false;\n  }\n\n  onEnterEmail(value : string) {\n    console.log(value)\n    this.name = value\n  }\n\n  onEnterPass(value: string) {\n    this.password = value\n  }\n\n  async login() {\n    if (this.name == \"\" || this.password == \"\") {\n      this.Erreur = 'Veuillez remplir tous les champs';\n      this.popUp = true;\n      return;\n    }\n    await fetch(\"http://localhost:3000/user/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.name,\n        // email: \"william@epitech.eu\",\n        password: this.password,\n        // password: \"william\",\n      }),\n    }).then(function (response) {\n      // The API call was successful!\n        if (response.ok) {\n            return response.json();\n        } else {\n            return Promise.reject(response);\n        }\n    }).then(data => {\n      // This is the JSON from our response\n      this.router.navigate(['home']);\n      localStorage.setItem('token', data.token)\n      localStorage.setItem('id', data.user.user_id)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}